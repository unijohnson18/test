{
  "Основные команды": {
    "git status": "Показать статус репозитория (измененные, добавленные файлы)",
    "git log --oneline -10": "Показать последние 10 коммитов в краткой форме",
    "git log --graph --oneline": "Показать историю коммитов в виде графа",
    "git log --stat": "Показать коммиты с информацией об измененных файлах",
    "git branch": "Показать все локальные ветки",
    "git branch -a": "Показать все ветки (локальные и удаленные)",
    "git branch --show-current": "Показать название текущей ветки",
    "git remote -v": "Показать все удаленные репозитории",
    "git config --list": "Показать все настройки Git",
    "git config --global --list": "Показать глобальные настройки Git"
  },
  "Работа с файлами": {
    "git add .": "Добавить все измененные файлы в индекс (подготовить к коммиту)",
    "git add [filename]": "Добавить конкретный файл в индекс",
    "git add *.js": "Добавить все JavaScript файлы в индекс",
    "git add *.py": "Добавить все Python файлы в индекс",
    "git reset HEAD [filename]": "Убрать файл из индекса (отменить git add)",
    "git reset HEAD .": "Убрать все файлы из индекса",
    "git checkout -- [filename]": "Отменить изменения в файле (вернуть к последнему коммиту)",
    "git checkout -- .": "Отменить все изменения в рабочей директории",
    "git rm [filename]": "Удалить файл из репозитория и файловой системы",
    "git rm --cached [filename]": "Удалить файл из Git, но оставить в файловой системе",
    "git mv [old_name] [new_name]": "Переименовать файл в Git"
  },
  "Коммиты": {
    "git commit -m \"[message]\"": "Создать коммит с сообщением",
    "git commit -am \"[message]\"": "Добавить все файлы и создать коммит одной командой",
    "git commit --amend": "Изменить последний коммит (добавить файлы или изменить сообщение)",
    "git commit --amend -m \"[message]\"": "Изменить сообщение последнего коммита",
    "git reset --soft HEAD~1": "Отменить последний коммит, оставить изменения в индексе",
    "git reset --mixed HEAD~1": "Отменить последний коммит, убрать изменения из индекса",
    "git reset --hard HEAD~1": "Полностью отменить последний коммит (удалить изменения)",
    "git revert HEAD": "Создать коммит, отменяющий последний коммит",
    "git show": "Показать детали последнего коммита",
    "git show [commit_hash]": "Показать детали конкретного коммита"
  },
  "Ветки": {
    "git checkout -b [branch_name]": "Создать новую ветку и переключиться на неё",
    "git checkout [branch_name]": "Переключиться на существующую ветку",
    "git checkout main": "Переключиться на главную ветку (main)",
    "git checkout master": "Переключиться на главную ветку (master)",
    "git merge [branch_name]": "Слить указанную ветку в текущую",
    "git merge --no-ff [branch_name]": "Слить ветку с созданием merge-коммита",
    "git branch -d [branch_name]": "Удалить ветку (безопасно)",
    "git branch -D [branch_name]": "Принудительно удалить ветку",
    "git branch -m [old_name] [new_name]": "Переименовать ветку",
    "git branch -r": "Показать удаленные ветки"
  },
  "Удаленный репозиторий": {
    "git fetch": "Загрузить изменения с удаленного репозитория (не применяя)",
    "git fetch origin": "Загрузить изменения с origin репозитория",
    "git pull": "Загрузить и применить изменения с удаленного репозитория",
    "git pull origin main": "Загрузить изменения конкретно с ветки main",
    "git pull origin master": "Загрузить изменения конкретно с ветки master",
    "git push": "Отправить изменения на удаленный репозиторий",
    "git push origin [branch]": "Отправить конкретную ветку на удаленный репозиторий",
    "git push -u origin [branch]": "Отправить ветку и установить связь с удаленной веткой",
    "git push --force-with-lease": "Принудительная отправка (безопасная версия --force)",
    "git push --set-upstream origin [branch]": "Отправить ветку и установить upstream соединение",
    "git remote add origin [url]": "Добавить удаленный репозиторий",
    "git remote set-url origin [url]": "Изменить URL удаленного репозитория",
    "git remote remove origin": "Удалить удаленный репозиторий"
  },
  "Информация и сравнение": {
    "git diff": "Показать изменения в рабочей директории",
    "git diff --staged": "Показать изменения в индексе (готовые к коммиту)",
    "git diff HEAD": "Показать все изменения с последнего коммита",
    "git diff [filename]": "Показать изменения в конкретном файле",
    "git diff [commit1] [commit2]": "Сравнить два коммита",
    "git diff HEAD~1": "Сравнить с предыдущим коммитом",
    "git blame [filename]": "Показать, кто и когда изменял каждую строку файла",
    "git log --follow [filename]": "Показать историю изменений файла",
    "git log -p": "Показать коммиты с изменениями",
    "git whatchanged": "Показать что изменялось в каждом коммите"
  },
  "Отладка и восстановление": {
    "git stash": "Временно сохранить текущие изменения",
    "git stash pop": "Восстановить последние сохраненные изменения",
    "git stash list": "Показать список сохраненных изменений",
    "git stash drop": "Удалить последние сохраненные изменения",
    "git clean -f": "Удалить неотслеживаемые файлы",
    "git clean -fd": "Удалить неотслеживаемые файлы и директории",
    "git reflog": "Показать историю всех действий в репозитории",
    "git fsck": "Проверить целостность репозитория",
    "git gc": "Очистить и оптимизировать репозиторий"
  },
  "Настройки и конфигурация": {
    "git config --global user.name \"[name]\"": "Установить имя пользователя глобально",
    "git config --global user.email \"[email]\"": "Установить email пользователя глобально",
    "git config --local user.name \"[name]\"": "Установить имя пользователя для текущего репозитория",
    "git config --local user.email \"[email]\"": "Установить email для текущего репозитория",
    "git config --global init.defaultBranch main": "Установить main как ветку по умолчанию",
    "git config --global core.editor [editor]": "Установить текстовый редактор по умолчанию",
    "git config --global core.autocrlf true": "Настроить автоматическое преобразование окончаний строк",
    "git config --unset [key]": "Удалить настройку"
  },
  "Теги": {
    "git tag": "Показать все теги",
    "git tag [tagname]": "Создать тег для текущего коммита",
    "git tag -a [tagname] -m \"[message]\"": "Создать аннотированный тег с сообщением",
    "git tag -d [tagname]": "Удалить локальный тег",
    "git push origin [tagname]": "Отправить тег на удаленный репозиторий",
    "git push origin --tags": "Отправить все теги на удаленный репозиторий",
    "git push origin --delete [tagname]": "Удалить тег с удаленного репозитория"
  },
  "Продвинутые команды": {
    "git rebase [branch]": "Перебазировать текущую ветку на указанную",
    "git rebase -i HEAD~[number]": "Интерактивная перебазировка последних коммитов",
    "git cherry-pick [commit]": "Применить изменения из конкретного коммита",
    "git bisect start": "Начать бинарный поиск проблемного коммита",
    "git submodule init": "Инициализировать подмодули",
    "git submodule update": "Обновить подмодули",
    "git archive --format=zip HEAD > archive.zip": "Создать архив текущего состояния",
    "git ls-remote --heads origin": "Показать удаленные ветки без загрузки",
    "git shortlog -s -n": "Показать статистику коммитов по авторам"
  },
  "Поиск и фильтрация": {
    "git log --grep=\"[pattern]\"": "Найти коммиты по тексту в сообщении",
    "git log --author=\"[author]\"": "Показать коммиты конкретного автора",
    "git log --since=\"2 weeks ago\"": "Показать коммиты за последние 2 недели",
    "git log --until=\"2023-12-31\"": "Показать коммиты до определенной даты",
    "git log [filename]": "Показать историю изменений файла",
    "git grep \"[pattern]\"": "Поиск текста во всех файлах репозитория",
    "git show-branch": "Показать ветки и их коммиты в виде дерева"
  },
  "Безопасность и бэкапы": {
    "git clone [url]": "Склонировать удаленный репозиторий",
    "git clone --depth 1 [url]": "Склонировать только последний коммит (быстро)",
    "git bundle create backup.bundle HEAD main": "Создать резервную копию ветки",
    "git verify-commit HEAD": "Проверить подпись последнего коммита",
    "git remote prune origin": "Удалить ссылки на удаленные ветки",
    "git fetch --prune": "Обновить с очисткой удаленных веток"
  },
  "Работа с .gitignore": {
    "git ls-files --ignored --exclude-standard": "Показать игнорируемые файлы",
    "git check-ignore [filename]": "Проверить, игнорируется ли файл",
    "git rm -r --cached .": "Удалить все файлы из индекса (для обновления .gitignore)",
    "git update-index --skip-worktree [filename]": "Игнорировать изменения в файле локально",
    "git update-index --no-skip-worktree [filename]": "Отменить локальное игнорирование файла"
  }
}